{

  "api.call.failed": "      -> API call failed: {0}",
  "api.modrinth.url": "Modrinth API URL ({0}): {1}",
  "api.modrinth.loader_failed": "Loader {0} failed: {1}",
  "api.modrinth.loader_empty": "Empty response for loader: {0}",
  "api.modrinth.all_failed": "All API requests failed: {0}",
  "api.modrinth.loader_found": "Found version with loader: {0}",
  "api.modrinth.version_found": "Successfully found version {0} for loader: {1}",
  "api.modrinth.version_failed": "Failed to find versions for MC {0} with compatible loaders",
  "api.modrinth.res": "Modrinth Response: {0}",
  "api.spiget.req_failed": "Spiget API request failed: {0}",
  "api.spiget.url_failed": "Could not extract version or download URL",
  "api.github.req_failed": "GitHub API request failed: {0}",
  "api.github.no_version": "Could not find version in GitHub release.",
  "api.github.no_jar": "Could not find .jar download in GitHub release.",
  "api.jenkins.type_unknown": "Unknown Jenkins type: {0}",
  "api.jenkins.url": "Jenkins API URL ({0}): {1}",
  "api.jenkins.url_failed": "Could not construct download URL for custom Jenkins",
  "api.jenkins.req_failed":"Jenkins API request failed: {0}",
  "api.jenkins.res": "Jenkins Response: {0}",
  "api.jenkins.extract_failed": "Could not extract build number from Jenkins response.",
  "api.jenkins.no_jar": "No .jar artifacts found in Jenkins build.",
  "api.jenkins.summary": "Jenkins Version: {0}\n Jenkins Download URL: {1}",

  "app.goodbye": "Farewell gamer! 🎮",
  "app.session_ended": "Pluginator session ended!",
  "app.session_started": "Pluginator session started!",
  "app.title": "🎮 Pluginator C++",
  "app.version": "Version",
  "app.prod": "Production: {0}",
  "app.test": "Test: {0}",
  "app.backups": "Backups: {0}",

  "cmd.title": "\n\nPluginator C++ - Version {0}",
  "cmd.usage": "Usage: pluginator [command]",
  "cmd.commands": "\nCommands:",
  "cmd.sync.descrp": "Sync plugins from Production to Test",
  "cmd.sync.run": "🔄 Syncing plugins from Production to Test ...",
  "cmd.backup-prod.descrp": "Create manual backup of Production Server", 
  "cmd.backup-prod.run": "💾 Creating Production Server backup ...",
  "cmd.backup-test.descrp": "Create manual backup of Test Server",
  "cmd.backup-test.run": "💾 Creating Test Server backup ...",
  "cmd.migrate.descrp": "Migrate Test server to Production (with backup)",
  "cmd.migrate.run": "🚚 Starting migration from Test to Production ...",
  "cmd.check-plugins.descrp": "Check for plugin updates",
  "cmd.check-plugins.run": "🔍 Checking plugin updates ...",
  "cmd.update-plugins.descrp": "Download and install plugin updates",
  "cmd.update-plugins.run": "⬇️ Downloading plugin updates ...",
  "cmd.plugin-status.descrp": "Show current plugin status",
  "cmd.plugin-status.run": "📋 Showing plugin status ...",
  "cmd.scan-versions.descrp": "Scan and update saved plugin versions", 
  "cmd.scan-versions.run": "🔍 Scanning and updating plugin versions ...",
  "cmd.scan-versions-api.descrp": "Scan and update saved plugin versions via respective API",
  "cmd.scan-versions-api.run": "🔍 Scanning and updating plugin versions via API ...",
  "cmd.verify-versions.descrp": "Verify saved plugin versions",
  "cmd.verify-versions.run": "📋 Verifying plugin versions ...",
  "cmd.check-purpur.descrp": "Check for Purpur server updates", 
  "cmd.check-purpur.run": "🎯 Checking Purpur updates...",
  "cmd.logs.descrp": "View recent log files",
  "cmd.logs.run": "📋 Viewing recent logs ...",
  "cmd.backups.descrp": "View recent backup files",
  "cmd.backups.run": "📋 Viewing recent backups ...",
  "cmd.config.descrp": "Show current configuration",
  "cmd.config.run": "⚙️ Current configuration:",
  "cmd.help.descrp": "Show this help message",
  "cmd.unknown.descrp": "❌ Unknown command: {0}",
  "cmd.unknown.subdescrp": "Run 'pluginator help' for available commands.",
  "cmd.run_no_args": "\nRun without arguments for interactive mode.",

  "config.file_title": "# Pluginator Configuration File\n",
  "config.file_subtitle": "## Environment variables take precedence over these values\n\n",
  "config.lang_settings": "Environment Variables:",
  "config.lang_current": "  Current language: ",
  "config.lang_available": "  Available languages: en (more coming soon maybe)",
  "config.plugin_summary": "Plugin Summary:",
  "config.plugin_total": "  Total configured plugins: ",
  "config.plugin_versions_file": "  Plugin versions file: ",
  "config.print_title": "\n📋 Current Configuration:\n",

  "backup.backup_file": "💾 Backup file: {0}",
  "backup.cleanup": "Cleaning up old backups (keeping {0} newest) ...",
  "backup.cleanup_completed": "Cleaned up {0} old backup files",
  "backup.created": "Backup created: {0}",
  "backup.creating": "Creating backup: {0}",
  "backup.dir_create": "Creating backup directory: {0}",
  "backup.dir_permissions": "Backup dir permissions: {0}",
  "backup.dir_create_failed": "Failed to create backup directory: {0}",
  "backup.dir_not_found": "Backup directory not found: {0}",
  "backup.failed": "Failed to create backup!",
  "backup.failed_exit_code": "Backup failed with exit code: {0}",
  "backup.file": "Backup File: {0}",
  "backup.filename": "Filename: {0}",
  "backup.no_backups": "No backups found.",
  "backup.parent_path": "Parent path: {0}",
  "backup.permissions_issue": "This might be a permissions issue or invalid path",
  "backup.recent_title": "📋 Recent Backups:",
  "backup.removed": "Removed old backup: {0}",
  "backup.removed_failed": "Failed to remove backup: {0}",
  "backup.running_command": "Running Command: {0}",
  "backup.source_path": "Source path: {0}",
  "backup.source_path_dne": "Soure path does not exist: {0}",
  "backup.timeout": "Backup timed out after {0} seconds!",
  "backup.timeout_cleanup": "Removed incomplete backup file",
  "backup.recents": "📋 Recent Backups:",
  "backup.taking_longer": "Backup taking longer than expected ...",
  "backup.calc_failed": "Could not calculate source size: {0}",

  "error.dir_not_found": "Directory not found: {0}",
  "error.failed_to_copy": "Failed to copy: {0}",
  "error.failed_to_remove": "Failed to remove: {0}",
  "error.failed_to_write": "Failed to write to file: {0}",
  "error.file_not_found": "File not found: {0}",

  "logger.cleanup": "Cleaned up {0} old log files (older than {1} days)",
  "logger.file_rotated": "Log file rotated due to size limit.",
  "logger.file_size": "Current log file size: {0}",
  "logger.file_truncated": "Log file truncated due to rotation failure.",
  "logger.files_available": "Available log files:",
  "logger.latest_entries": "\nLatest log entries:",
  "logger.no_entries": "No entries in today's log yet.",
  "logger.recent_title": "📋 Recent Log Files:",

  "menu.backup_operations": "💾 BACKUP OPERATIONS:",
  "menu.choose_option": "Choose an option: ",
  "menu.deployment": "🔄 DEPLOYMENT:",
  "menu.exit": "🚪 Exit",
  "menu.invalid_option": "Invalid option. Please choose 0-12.",
  "menu.press_enter": "Press Enter to continue...",
  "menu.server_management": "⚙️ SERVER MANAGEMENT:",
  "menu.update_operations": "🔄 UPDATE OPERATIONS:",
  "menu.interactive.config_title": "Plugin Configuration Management:",
  "menu.interactive.config_1": "1. Scan and configure from existing plugins",
  "menu.interactive.config_2": "2. Reload plugin configuration",
  "menu.interactive.config_3": "3. Back to main menu",
  "menu.interactive.choose": "Choose option: ",

  "migrate.backup": "Creating production backup before migration...",
  "migrate.cancelled": "Migration cancelled.",
  "migrate.completed": "Migration completed! Copied {0}",
  "migrate.confirm": "Are you sure? (y/n): ",
  "migrate.failed": "Failed to migrate: {0}",
  "migrate.info": "Migrated: {0}",
  "migrate.no_jars": "No jar files found in test server plugins directory",
  "migrate.plugins_copied": "Copied {0} plugins",
  "migrate.purpur.copied": "Purpur jar copied to production.",
  "migrate.purpur.fail": "Failed to copy server jar: {0}",
  "migrate.starting": "🚚 Migrating plugins from Test → Production ...",
  "migrate.warning": "This will replace production with Test Server state!",

  "plugin.added": "Added plugin: {0}",
  "plugin.added_from_list": "Added from list: {0} (type: {1})",
  "plugin.already_exists": "Plugin {0} already exists",
  "plugin.already_updated": "{0} is already up to date",
  "plugin.check_failed": "Failed to check {0}: {1}",
  "plugin.checking": "Checking {0} ...",
  "plugin.checking_all": "Checking all plugin updates...",
  "plugin.config_generated": "Plugin configuration file generated successfully",
  "plugin.config_invalid_json": "Invalid JSON in plugin config: {0}",
  "plugin.config_load_failed": "Failed to load plugin config: {0}",
  "plugin.config_loaded": "Loaded {0} plugin configurations from {1}",
  "plugin.config_loaded_external": "External plugin config loaded successfully",
  "plugin.config_missing_required": "Missing required fields for plugin: {0}",
  "plugin.config_no_plugins_array": "No 'plugins' array found in config: {0}",
  "plugin.config_not_found": "Plugin config not found: {0}",
  "plugin.config_save_config_prompt": "Save detected plugins to configuration file? (y/n): ",
  "plugin.config_updated": "Updated configuration for plugin: {0}",
  "plugin.config.init": "Initializing plugin manager from config: {0}",
  "plugin.config.saved": "Plugin configuration saved!",
  "plugin.detected": "Detected plugin: {0} (type: {1})",
  "plugin.disabled.already_dis": "Plugin already disabled: {0}",
  "plugin.disabled.completed": "Successfully disabled {0} plugins for Test Server.",
  "plugin.disabled.no_dis": "No plugins were actually disabled.",
  "plugin.disabled.count": "Disabled: {0} → {1}",
  "plugin.disabled.rename_failed": "Failed to disable {0}: (rename didn't complete!)",
  "plugin.disabled.failed": "Failed to disable {0}: {1}",
  "plugin.disabled.no_matching_file": "No matching file found for plugin: {0}",
  "plugin.disabled.searched_in": "Searched in: {0}",
  "plugin.disabled.no_need": "No plugins need to be disabled.",
  "plugin.disabled.processing": "Processing plugin to disable: {0}",
  "plugin.disabled.starting": "🚫 Disabling selected plugins for Test Server ...",
  "plugin.disabled.marked": "Plugin marked for disabling: {0}",
  "plugin.disabled.marked.found": "Found {0} plugins marked for disabling",
  "plugin.disabled.skipping": "Skipping disabled plugin: {0}",
  "plugin.disabled.current_path": "Current path: {0}",
  "plugin.disabled.new_path": "New path: {0}",
  "plugin.disabled.source_dne": "Source file does not exist: {0}",
  "plugin.available_jars": "Available jar files:",
  "plugin.download_failed": "Failed to download {0}",
  "plugin.download_path": "📁 Saving to: {0}",
  "plugin.download_success": "Successfully downloaded {0}",
  "plugin.download_success_with_size": "Successfully downloaded {0} ({1})",
  "plugin.downloading": "🚀 Downloading {0}...",
  "plugin.enabled.completed": "Re-enabled {0} plugins",
  "plugin.enabled.count": "Re-enabled: {0} → {1}",
  "plugin.enabled.fail": "Failed to re-enable: {0}",
  "plugin.enabled.no_need": "No plugins were re-enabled.",
  "plugin.enabled.starting": "Re-enabling disabled plugins in Test Server ...",
  "plugin.init": "Populated {0} plugins in main class.",
  "plugin.list_processed": "Processed {0} plugins from list file: {1}",
  "plugin.loaded": "Loaded plugin: {0} (type: {1})",
  "plugin.manager_initialized": "Plugin manager initialized with {0} plugins",
  "plugin.new_plugin": "New plugin (not tracked yet)",
  "plugin.no_download_info": "No download information available for {0}",
  "plugin.not_found": "Plugin not found: {0}",
  "plugin.old_removed": "🗑️ Removed old version: {0}",
  "plugin.remove_failed": "Failed to remove old version: {0}",
  "plugin.removed": "Removed plugin: {0}",
  "plugin.save_config_prompt": "Save detected plugins to configuration? (y/n): ",
  "plugin.scan.completed": "Plugin scan completed. Found {0} plugins",
  "plugin.scan.update_run": "Scanning plugin files to update version tracking ...",
  "plugin.scan.no_version": "Could not detect version for: {0}",
  "plugin.scan.updated": "Updated {0}: {1} -> {2}",
  "plugin.scan.files": "Scanning Files",
  "plugin.scanning": "Scanning plugins directory: {0}",
  "plugin.up_to_date": "Up to date",
  "plugin.update_available": "Update available!",
  "plugin.update_failed": "Update failed",
  "plugin.update_summary": "{0} updates available, {1} errors",
  "plugin.update_summary_downloaded": "Downloaded {0} plugin updates",
  "plugin.updated_successfully": "Updated successfully",
  "plugin.updated_to_version": "Successfully updated {0} to version {1}",
  "plugin.updating": "🔄 Updating {0}...",
  "plugin.version.summary": "Updated {0} plugin versions.",
  "plugin.version.api.run": "Scanning plugin files with API verification ...",
  "plugin.version.api.failed": "API check failed for {0}: {1}",
  "plugin.version.api.no_filename": "No filename version for {0}, checking API ...",
  "plugin.version.api.updated_filename": "Updated {0} from filename: {1}",
  "plugin.version.api.updated_summary": "Scan complete. Updated {0} from filenames, {1} from APIs.",
  "plugin.version.api.updated_api": "Updated {0} from API: {1}",
  "plugin.version_updated": "Updated {0} version to {1}",
  "plugin.versions_file_created": "Plugin versions file created",
  "plugin.versions_loaded": "Loaded {0} plugin versions",
  "plugin.verify.run": "Verifying stored versions against installed files ...",
  "plugin.verify.progress": "Verifying Plugins",
  "plugin.verify.verified": "Verified {0} version: {1}",
  "plugin.verify.corrected": "Corrected {0}: stored={1} → actual={2}",
  "plugin.update.api_available": "Update available for {0}: {1} → {2}",
  "plugin.verify.summary": "Verified: {0}\n Corrected {1}\n Updates Available: {2}",
  "plugin.verify.complete": "Verification complete:\n   • {0} versions verified correct\n   • {1} stored versions corrected\n   • {2} plugins have updates available",
  "plugin.extract_version": "Extracting version from: {0}",
  "plugin.without_jar": "  Filename without .jar: {0}",
  "plugin.pattern.matched": "  Matched pattern ({0}): {1}",
  "plugin.pattern.no": "  No version pattern matched",
  "plugin.version.detect.run": "Detecting version for plugin: ",
  "plugin.version.detect.no_match": "  No matching file found for: {0}",
  "plugin.version.detect.match": "  Found matching file: {0}",
  "plugin.version.detect.extract": "  Extracted version: {0}",
  "plugin.find.check": "  Checking file: {0}",
  "plugin.find.match": "    Matched: {0}",
  "plugin.info.updates": "Manual plugins require manual updates!",
  "plugin.info.unknown": "Unknown plugin type: {0}",
  "plugin.status.title": "Plugin Status Report:",
  "plugin.guess.check": "Using cached type for {0}: {1}",
  "plugin.guess.detect.run": "Attempting API detection for: {0}",
  "plugin.guess.found.modrinth": "  -> Found on Modrinth",
  "plugin.guess.found.github": "  -> Found on GitHub",
  "plugin.guess.found.spigot": "  -> Found on SpigotMC",
  "plugin.guess.no_found": "  -> No API match found, defaulting to manual",
  "plugin.cache.load": "Loaded {0} cached plugin types",
  "plugin.guess.modrinth.run": "    Testing Modrinth for: {0}",
  "plugin.guess.modrinth.slug": "      Trying Modrinth slug: {0}",
  "plugin.guess.modrinth.success": "      -> Success! Found on Modrinth as: {0}",
  "plugin.guess.github.run": "    Testing GitHub for: {0}",
  "plugin.guess.github.repo": "      Trying GitHub repo: {0}",
  "plugin.guess.github.success": "      -> Success! Found on GitHub as: {0}",
  "plugin.guess.spigot.run": "    Testing Spigot for: {0}",
  "plugin.guess.spigot.resourceid": "      Trying Spigot resource ID: {0}",
  "plugin.guess.spigot.success": "      -> Success! Found on Spigot with resource ID: {0}",
  "plugin.no_jars": "No jar files found in: {0}",
  "plugin.type.detected": "Plugin types detected:",

  "purpur.build_failed": "Latest build failed. Check back later for a successful build.",
  "purpur.build_result": "Build result: {0}",
  "purpur.checking": "Checking for Purpur updates ...",
  "purpur.download_cancelled": "Download cancelled.",
  "purpur.download_failed": "Failed to download Purpur {0}",
  "purpur.download_path": "📁 Saving to: {0}",
  "purpur.download_prompt": "Would you like to download the latest version? (y/n): ",
  "purpur.download_success": "Successfully downloaded Purpur {0}",
  "purpur.download_success_with_size": "Successfully downloaded Purpur {0} ({1})",
  "purpur.download_wait_message": "⏳ This may take a few minutes for large files...",
  "purpur.downloaded_to": "Purpur downloaded to: {0}",
  "purpur.downloading_version": "🚀 Downloading Purpur version {0}",
  "purpur.latest_build": "Latest build: {0}",
  "purpur.latest_version": "Latest version: {0}",
  "purpur.fetch_failed": "Failed to fetch Purpur versions: {0}",
  "purpur.parse_failed": "Could not parse latest Purpur version",
  "purpur.build.fetch_failed": "Failed to fetch build info: {0}",
  "purpur.build.parse_failed": "Could not parse latest build number!",
  "purpur.status.run": "🎯 Purpur Server Status:",
  "purpur.status.summary": "  Latest Version:   {0}\n  Latest Build:   {1}\n  Build Status:   {2}",
  "purpur.status.url": "  Download URL:   {0}",

  "sync.completed": "Plugin sync completed! Copied {0} plugins",
  "sync.copied": "Copied: {0}",
  "sync.copying_jars": "Copying plugins from Production → Test ...",
  "sync.no_jars": "No jar files found in production server directory!",
  "sync.removed": "Removed: {0}",
  "sync.removing_jars": "Removing old JAR files from test server ...",
  "sync.starting": "🔄 Syncing plugins from Production → Test ...",
  
  "utils.debug_bin": "DEBUG: Binary at: {0}",
  "utils.debug_dir": "DEBUG: Install directory: {0}"
}